{"version":3,"sources":["themes/dark.js","themes/light.js","themes/ThemeProvider.js","utils/customHooks/usePersistedState.js","utils/Helpers.js","utils/auth.js","components/molecules/selectGroup/index.js","components/molecules/cardPLay/styles.js","components/molecules/cardPLay/index.js","components/atoms/logo/styles.js","components/atoms/logo/index.js","store/actions/auth.js","components/organisms/header/styles.js","components/organisms/header/index.js","store/actions/themes.js","store/actions/filter.js","services/filter/config/Endpoints.js","services/common/Axios.js","services/BaseService.js","services/filter/index.js","services/filter/config/Host.js","components/organisms/filters/styles.js","components/organisms/filters/index.js","services/spotify/config/Endpoints.js","services/spotify/index.js","services/spotify/config/Host.js","components/organisms/playlist/styles.js","components/organisms/playlist/index.js","components/templates/layout/styles.js","components/templates/layout/index.js","components/pages/home/index.js","components/pages/login/styles.js","components/pages/login/index.js","utils/LoggedWrapper.js","routes.js","store/reducers/themes.js","store/reducers/auth.js","store/reducers/filter.js","store/index.js","App.js","index.js"],"names":["Dark","colors","brandPrimary","brandSecondary","background","primary","secondary","tertiary","actived","text","Theme","theme","children","defaultProps","DarkTheme","usePersistedState","key","defaultState","useState","savedValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","removeItem","Helpers","query","URLSearchParams","window","location","hash","substring","response","q","HasLogged","useSelector","Auth","logged","SelectGroup","list","handleChange","name","setTheme","FormControl","component","RadioGroup","aria-label","value","map","item","FormControlLabel","onClick","event","control","Radio","label","CardCustom","styled","Card","css","CardPlay","link","image","CardActionArea","open","CardMedia","alt","title","CardContent","Typography","gutterBottom","variant","IconButton","TitleSpot","h1","TitleI","span","TitleFood","Logo","S","saveAuth","auth","type","purgeAuth","Button","Header","header","openDrawer","setOpenDrawer","registerThemes","Light","dispatch","useDispatch","history","useHistory","logout","push","profileName","profileImage","images","Grid","container","direction","justify","alignItems","Avatar","src","url","edge","color","Drawer","anchor","onClose","List","ListItem","button","ListItemIcon","ListItemText","Divider","e","changeFilter","filter","Endpoints","filters","options","axios","get","respJson","data","status","statusCode","message","BaseService","host","endpoints","request","this","_host","_endpoints","_request","headers","timeout","then","res","catch","process","Axios","BoxFilter","div","TextFieldCustom","TextField","Filters","showFilters","setShowFilters","enableFilters","setEnableFilters","buildedFilters","setBuildedFilters","fieldsFilters","setFieldsFilters","textFilter","setTextFilter","filterValues","Filter","a","dataFilters","buildFilters","inputSelect","id","onChangeFields","fullWidth","select","size","onChange","target","option","MenuItem","inputDate","InputLabelProps","shrink","format","Date","inputNumber","validation","InputProps","inputProps","min","max","helperText","values","length","input","primitiveType","entityType","advancedFilter","hasFilter","filterText","Switch","checked","spacing","lg","md","xs","href","userProfile","playlists","token","Authorization","authType","authToken","authorizationHeader","params","ProgressCustom","CircularProgress","Playlist","setPlaylists","originalPlaylists","setOriginalPlaylists","error","setError","loading","setLoading","tokenType","purgerAuthUser","getPlaylists","SpotiFy","items","dataPlaylists","filterTextPlaylist","filterPlayList","dataSave","playlist","toLowerCase","includes","Alert","severity","external_urls","spotify","GlobalStyle","createGlobalStyle","Main","main","Layout","themes","ThemeProvider","Container","maxWidth","Home","ButtonCustom","env","Login","errorLogin","setErrorLogin","getQueryStringParams","token_type","access_token","getProfile","dataAuth","startIcon","_","urlApi","REACT_APP_SP_API_AUTH","REACT_APP_SP_API_CLIENT_ID","REACT_APP_SP_API_REDIRECT_URI","handleLogin","withRouter","to","Routes","path","exact","INITIAL_STATE","Themes","action","reducers","CHANGE_THEME","default","SAVE_AUTH","display_name","PURGE_AUTH","CHANGE_FILTER","persistTheme","storage","persistAuth","persistFilter","persistedReducer","combineReducers","persistReducer","store","createStore","persistor","persistStore","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd5c9dbd.chunk.js","sourcesContent":["const Dark = {\n  colors: {\n    brandPrimary: '#ed1722',\n    brandSecondary: '#1db954',\n    background: '#252424',\n    primary: '#000000',\n    secondary: '#2d2b2b',\n    tertiary: '#4c4848',\n    actived: '#1db954',\n    text: '#FFFFFF',\n  },\n};\n\nexport default Dark;\n","const Dark = {\n  colors: {\n    brandPrimary: '#ed1722',\n    brandSecondary: '#1db954',\n    background: '#FFFFFF',\n    primary: '#f4f4f4',\n    secondary: '#CCCCCC',\n    tertiary: '#f3efef',\n    actived: '#1db954',\n    text: '#000000',\n  },\n};\n\nexport default Dark;\n","import PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\n\nimport DarkTheme from './dark';\n\nconst Theme = ({ theme, children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nTheme.propTypes = {\n  theme: PropTypes.shape({\n    colors: PropTypes.shape({\n      brandPrimary: PropTypes.string,\n      brandSecondary: PropTypes.string,\n      background: PropTypes.string,\n      primary: PropTypes.string,\n      secondary: PropTypes.string,\n      tertiary: PropTypes.string,\n      actived: PropTypes.string,\n      text: PropTypes.string,\n    }),\n  }),\n  children: PropTypes.node.isRequired,\n};\n\nTheme.defaultProps = { theme: DarkTheme };\n\nexport default Theme;\n","import { useState, useEffect } from 'react';\n\nconst usePersistedState = (key, defaultState) => {\n  const [state, setState] = useState(() => {\n    const savedValue = localStorage.getItem(key);\n\n    if (savedValue) {\n      return JSON.parse(savedValue);\n    }\n\n    return defaultState;\n  });\n\n  useEffect(() => {\n    if (state) {\n      localStorage.setItem(key, JSON.stringify(state));\n    } else {\n      localStorage.removeItem(key);\n    }\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default usePersistedState;\n","class Helpers {\n  /**\n   * Retornas os parametros da query string atual.\n   *\n   * @return {Array}\n   *\n   */\n  static getQueryStringParams() {\n    const query = new URLSearchParams(window.location.hash.substring(1));\n    const response = {};\n\n    for (let q of query) {\n      response[q[0]] = q[1];\n    }\n\n    return response;\n  }\n}\n\nexport default Helpers;\n","import { useSelector } from 'react-redux';\n\nconst HasLogged = () => useSelector((state) => state.Auth.logged);\n\nexport default HasLogged;\n","import Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\n\nimport { usePersistedState } from '../../../utils';\n\nconst SelectGroup = ({ list, handleChange }) => {\n  const [theme, setTheme] = usePersistedState('@SF:selectedButton', list[0].name ? list[0].name : null);\n\n  const handleClick = (event) => {\n    setTheme(event.name);\n    handleChange(event);\n  };\n\n  return (\n    <>\n      <FormControl component=\"fieldset\">\n        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={theme}>\n          {list.map((item) => (\n            <FormControlLabel key={item.name} onClick={() => handleClick(item)} value={item.name} control={<Radio />} label={`Tema ${item.name}`} />\n          ))}\n        </RadioGroup>\n      </FormControl>\n    </>\n  );\n};\n\nSelectGroup.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    theme: PropTypes.PropTypes.shape({}).isRequired,\n  })).isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default SelectGroup;\n","import styled, { css } from 'styled-components';\nimport Card from '@material-ui/core/Card';\n\n\nexport const CardCustom = styled(Card)`\n ${({ theme }) =>\n    css` && {\n      background: ${theme.colors.background};\n      max-width: 280px;\n      color: ${theme.colors.text};\n      border: 1px solid ${theme.colors.primary};\n      fill: ${theme.colors.text};\n      margin: 10px;\n    }`};\n`;\n","import CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport * as S from './styles';\n\nconst CardPlay = ({ link, image, name }) => {\n  return (\n    <S.CardCustom>\n      <CardActionArea onClick={() => window.open(link, '_blank')}>\n        <CardMedia\n          component=\"img\"\n          alt={name}\n          image={image}\n          title={name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <IconButton aria-label=\"play/pause\" onClick={() => window.open(link, '_blank')}>\n        <PlayArrowIcon />\n      </IconButton>\n    </S.CardCustom>\n  );\n}\n\nexport default CardPlay;\n","import styled, { css } from 'styled-components';\n\nexport const TitleSpot = styled.h1`\n ${({ theme }) =>\n    css` && {\n      color: ${theme.colors.brandSecondary};\n    }`};\n`;\n\nexport const TitleI = styled.span`\n ${({ theme }) =>\n    css` && {\n      color: ${theme.colors.text};\n    }`};\n`;\n\nexport const TitleFood = styled.span`\n ${({ theme }) =>\n    css` && {\n      color: ${theme.colors.brandPrimary};\n    }`};\n`;\n","import { Typography } from '@material-ui/core';\n\nimport * as S from './styles';\n\nconst Logo = () => (\n  <Typography component={S.TitleSpot} variant=\"h6\">\n    Spot\n    <Typography component={S.TitleI}>i</Typography>\n    <Typography component={S.TitleFood} variant=\"h6\">Food</Typography>\n  </Typography>\n);\n\nexport default Logo;\n","export const saveAuth = (auth) => ({\n  type: 'SAVE_AUTH',\n  auth,\n});\n\nexport const purgeAuth = (auth) => ({\n  type: 'PURGE_AUTH',\n  auth,\n});\n","import styled, { css } from 'styled-components';\nimport { Button } from '@material-ui/core';\n\nexport const ButtonCustom = styled(Button)`\n ${({ theme }) =>\n    css` && {\n      background: ${theme.colors.secondary};\n      border-color: ${theme.colors.tertiary};\n      color: ${theme.colors.text};\n    }`};\n`;\n\nexport const Header = styled.header`\n ${({ theme }) =>\n    css`\n      background: ${theme.colors.primary};\n      color: ${theme.colors.text};\n      padding: 20px;\n    `};\n`;\n","import { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Drawer } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PersonIcon from '@material-ui/icons/Person';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useHistory } from \"react-router-dom\";\n\nimport { Light, Dark } from '../../../themes';\nimport { changeTheme } from '../../../store/actions/themes';\nimport { SelectGroup } from '../../molecules';\nimport { Logo } from '../../atoms';\nimport { HasLogged } from '../../../utils';\nimport { purgeAuth } from '../../../store/actions/auth';\n\nimport * as S from './styles';\n\nconst Header = () => {\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  const registerThemes = [\n    { name: 'Light', theme: Light },\n    { name: 'Dark', theme: Dark }\n  ];\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const purgerAuthUser = () => dispatch(purgeAuth());\n\n  const logout = () => {\n    purgerAuthUser();\n    history.push('/login');\n  }\n\n  const { name: profileName, images: profileImage } = useSelector((state) => state.Auth);\n\n  return (\n    <S.Header>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid>\n          {!HasLogged() ? <Avatar><PersonIcon /></Avatar> : <Avatar alt={ profileName } src={ profileImage[0] ? profileImage[0].url : '' } /> }\n        </Grid>\n        <Grid>\n          <Logo />\n        </Grid>\n        <Grid>\n        <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\" onClick={() => setOpenDrawer(true)}>\n          <MenuIcon />\n        </IconButton>\n        <Drawer anchor=\"right\" open={openDrawer} onClose={() => setOpenDrawer(false)}>\n          <List>\n            <ListItem button onClick={() => setOpenDrawer(false)}>\n              <ListItemIcon><CloseIcon /></ListItemIcon>\n              <ListItemText primary=\"Fechar\" />\n            </ListItem>\n            <Divider />\n            {HasLogged() && (\n              <ListItem button onClick={() => logout()}>\n                <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n                <ListItemText primary=\"Logout\" />\n              </ListItem>\n            )}\n            <Divider />\n            <ListItem>\n              <SelectGroup list={registerThemes} handleChange={(e) => { dispatch(changeTheme(e.theme)); }} />\n            </ListItem>\n          </List>\n        </Drawer>\n        </Grid>\n      </Grid>\n    </S.Header>\n  );\n};\n\nexport default Header;\n","export const changeTheme = (theme) => ({\n  type: 'CHANGE_THEME',\n  theme,\n});\n","export const changeFilter = (filter) => ({\n  type: 'CHANGE_FILTER',\n  filter,\n});\n","const Endpoints = {\n  filters: '/5a25fade2e0000213aa90776',\n};\n\nexport default Endpoints;\n","import axios from 'axios';\n\nclass Axios {\n  async get(url, options) {\n    try {\n      const response = await axios.get(url, options);\n\n      const respJson = {\n        data: response.data,\n        status:\n          response.data && response.data.statusCode\n            ? response.data.statusCode\n            : response.status,\n      };\n\n      return respJson;\n    } catch (error) {\n      const respError = {\n        message:\n          error.response && error.response.message\n            ? error.response.message\n            : error.message,\n        data: error.response && error.response.data ? error.response.data : {},\n        status:\n          error.response && error.response.status ? error.response.status : 417,\n      };\n\n      throw respError;\n    }\n  }\n}\n\nexport default new Axios();\n","class BaseService {\n  constructor(host, endpoints, request) {\n    this._host = host;\n    this._endpoints = endpoints;\n    this._request = request;\n  }\n\n  get url() {\n    return this._host;\n  }\n\n  get endpoints() {\n    return this._endpoints;\n  }\n\n  get request() {\n    return this._request;\n  }\n}\n\nexport default BaseService;\n","import { Host, Endpoints } from './config';\nimport { Axios } from '../common';\nimport BaseService from '../BaseService';\n\nclass Filter extends BaseService {\n  constructor(host, endpoints, request) {\n    super(host, endpoints, request);\n\n    this.header = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      timeout: 60000\n    };\n  }\n\n  async get() {\n    const url = this.url + this.endpoints.filters;\n\n    return this.request\n      .get(url, this.header)\n      .then((res) => res)\n      .catch((e) => e);\n  }\n}\n\nexport default new Filter(Host, Endpoints, Axios);\n","const Host = process.env.REACT_APP_FILTER_API;\n\nexport default Host;\n","import styled, { css } from 'styled-components';\nimport {\n  TextField,\n} from \"@material-ui/core\";\n\nexport const BoxFilter = styled.div`\n ${({ theme }) =>\n    css` && {\n      padding: 20px;\n      color: ${theme.colors.text};\n      margin-bottom: 30px;\n      background: ${theme.colors.primary};\n      border-radius: 5px;\n      text-align: left;\n    }`};\n`;\n\nexport const TextFieldCustom = styled(TextField)`\n ${({ theme }) =>\n    css` && {\n      .MuiOutlinedInput-root {\n        color: ${theme.colors.text};\n        border-color:  ${theme.colors.text};\n      }\n\n      label {\n        color: ${theme.colors.text};\n      }\n\n      .MuiOutlinedInput-notchedOutline {\n        border-color:  ${theme.colors.text} !important;\n      }\n\n      .MuiOutlinedInput-notchedOutline {\n        border-color:  ${theme.colors.text};\n\n        &:hover {\n          border-color:  ${theme.colors.text};\n        }\n      }\n\n      .Mui-focused {\n        color: ${theme.colors.text};\n        border-color:  ${theme.colors.text};\n      }\n    }`};\n`;","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from \"date-fns\";\nimport {\n  Grid,\n  MenuItem,\n  Button,\n  Switch,\n  FormControlLabel,\n} from \"@material-ui/core\";\n\nimport { changeFilter } from '../../../store/actions/filter';\nimport Filter from '../../../services/filter';\n\nimport * as S from './styles';\n\nconst Filters = () => {\n  const [ showFilters, setShowFilters ] = useState(false);\n  const [ enableFilters, setEnableFilters ] = useState(false);\n  const [ buildedFilters, setBuildedFilters ] = useState([]);\n  const [ fieldsFilters, setFieldsFilters ] = useState([]);\n  const [ textFilter, setTextFilter ] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const filterValues = useSelector((state) => state.Filter);\n\n  useEffect( async () => {\n    const dataFilters = await Filter.get();\n\n    if (dataFilters.status === 200) {\n      setBuildedFilters(buildFilters(dataFilters?.data?.filters));\n      setShowFilters(true);\n    }\n  }, []);\n\n  const inputSelect = (id, name, onChangeFields, options = [], validation = {}) => {\n    return (\n      <S.TextFieldCustom \n        id={id} \n        label={name} \n        fullWidth \n        select \n        variant=\"outlined\" \n        size=\"small\"\n        value=\"\"\n        onChange={(e) => onChangeFields(e.target.value)}\n      >\n        {options.map((option, key) => <MenuItem key={key} value={option.value}>{option.name}</MenuItem>)}\n      </S.TextFieldCustom>\n    )\n  }\n\n  const inputDate = (id, name, onChangeFields, options = [], validation = {}) => {\n    return (\n      <S.TextFieldCustom \n        id={id} \n        label={name} \n        fullWidth \n        type=\"datetime-local\" \n        variant=\"outlined\" \n        size=\"small\" \n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={(e) => onChangeFields(format(new Date(e.target.value), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\"))}\n      />\n    )\n  }\n\n  const inputNumber = (id, name, onChangeFields, options = [], validation = {}) => {\n    return (\n      <S.TextFieldCustom \n        id={id} \n        label={name} \n        type=\"number\" \n        variant=\"outlined\" \n        size=\"small\" \n        fullWidth\n        InputProps={{\n          inputProps: {\n            min: validation?.min,\n            max: validation?.max,\n          },\n        }}\n        onChange={(e) => onChangeFields(e.target.value)}\n        helperText={validation?.min && validation?.max && `Valor mínimo ${validation?.min} e valor máximo ${validation?.max}`}\n      />\n    );\n  }\n\n  const buildFilters = (filters) => { \n    return filters.map((filter) => {\n      if (filter.values && filter?.values?.length > 0) {\n        filter.input = inputSelect;\n      } else if (filter?.validation?.primitiveType === 'STRING' && filter?.validation?.entityType === 'DATE_TIME') {\n        filter.input = inputDate;\n      } else if (filter?.validation?.primitiveType === 'INTEGER') {\n        filter.input = inputNumber;\n      }\n      return filter;\n    });\n  };\n\n  const onChangeFields = (id, value) => {\n    setFieldsFilters({\n      ...fieldsFilters,\n      [id]: value,\n    })\n  }\n\n  const handleFilter = () => {\n    const filter = {\n      text: textFilter,\n      advancedFilter: fieldsFilters,\n      hasFilter: true\n    }\n    \n    dispatch(changeFilter(filter))\n  }\n\n  const filterText = (value) => {\n    const filter = {\n      text: value,\n      advancedFilter: {},\n      hasFilter: false\n    }\n\n    setTextFilter(value);\n    dispatch(changeFilter(filter))\n  }\n\n  return (\n    <S.BoxFilter>\n      <S.TextFieldCustom\n        id=\"search\"\n        label=\"Buscar playlist\"\n        variant=\"outlined\"\n        value={filterValues.text ? filterValues.text : ''}\n        size=\"small\"\n        onChange={(e) => filterText(e.target.value)}\n        fullWidth\n      />\n      {showFilters && buildedFilters.length > 0 &&\n        <>\n          <FormControlLabel\n            control={<Switch checked={enableFilters} onChange={() => setEnableFilters(enableFilters ? false : true)} name=\"jason\" />}\n            label=\"Filtros\"\n          />\n          {enableFilters &&\n            <Grid container spacing={1}>\n              {buildedFilters.map((filter, key) => {\n                  return (\n                    <Grid key={key} item lg={4} md={4} xs={12} key={filter.name}>\n                      {filter.input(filter.id, filter.name, (e) => onChangeFields(filter.id, e), filter?.values, filter?.validation)}\n                    </Grid>\n                  )\n                })\n              }\n                <Grid item lg={4} md={4} xs={12}>\n                  <Button variant=\"contained\" color=\"primary\" size=\"large\" href=\"#contained-buttons\" fullWidth onClick={handleFilter}>\n                    Filtrar\n                  </Button>\n                </Grid>\n            </Grid>\n          }\n        </>\n      }\n\n    </S.BoxFilter>\n  );\n};\n\nexport default Filters;","const Endpoints = {\n  userProfile: '/me',\n  playlists: '/browse/featured-playlists',\n};\n\nexport default Endpoints;\n","import { Host, Endpoints } from './config';\nimport { Axios } from '../common';\nimport BaseService from '../BaseService';\n\nclass Spotify extends BaseService {\n  constructor(host, endpoints, request) {\n    super(host, endpoints, request);\n\n    this.header = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      timeout: 60000\n    };\n  }\n\n  authorizationHeader(type, token) {\n    this.header.headers.Authorization = `${type} ${token}`;\n  }\n\n  async getProfile(authType, authToken) {\n    this.authorizationHeader(authType, authToken);\n\n    const url = this.url + this.endpoints.userProfile;\n\n    return this.request\n      .get(url, this.header)\n      .then((res) => res)\n      .catch((e) => e);\n  }\n\n  async getPlaylists(authType, authToken, filter = false) {\n    this.authorizationHeader(authType, authToken);\n\n    const url = this.url + this.endpoints.playlists;\n\n    if (filter) {\n      this.header.params = filter;\n    }\n\n    return this.request\n      .get(url, this.header)\n      .then((res) => res)\n      .catch((e) => e);\n  }\n}\n\nexport default new Spotify(Host, Endpoints, Axios);\n","const Host = process.env.REACT_APP_SP_API;\n\nexport default Host;\n","import styled, { css } from 'styled-components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport const ProgressCustom = styled(CircularProgress)`\n ${({ theme }) =>\n    css` && {\n      color: ${theme.colors.text};\n      margin-top: 50px;\n    }`};\n`;\n\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport SpotiFy from '../../../services/spotify';\nimport { CardPlay } from '../../molecules';\nimport { purgeAuth } from '../../../store/actions/auth';\nimport { changeFilter } from '../../../store/actions/filter';\n\nimport * as S from './styles';\n\nconst Playlist = () => {\n  const [ playlists, setPlaylists ] = useState([]);\n  const [ originalPlaylists, setOriginalPlaylists ] = useState([]);\n  const [ error, setError ] = useState(false);\n  const [ loading, setLoading ] = useState(true);\n\n  const { token, tokenType }  = useSelector((state) => state.Auth);\n  const filterValues = useSelector((state) => state.Filter);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const purgerAuthUser = () => dispatch(purgeAuth());\n\n  const getPlaylists = async (filter = false) => {\n    const response = await SpotiFy.getPlaylists(tokenType, token, filter);\n\n    if (response.status === 200) {\n      return response.data.playlists.items;\n    } else if (response.status === 401) {\n      purgerAuthUser();\n      history.push('/login');\n    }\n\n    return null;\n  }\n\n  useEffect( async () => {\n    const dataPlaylists = await getPlaylists();\n\n    if (!dataPlaylists) {\n      setError(true);\n    } else {\n      filterTextPlaylist(dataPlaylists);\n    }\n\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    filterTextPlaylist(originalPlaylists);\n    filterPlayList();\n  }, [filterValues]);\n\n  const filterTextPlaylist = (dataPlaylists) => {\n    let dataSave = dataPlaylists;\n\n    setOriginalPlaylists(dataSave);\n\n    if (filterValues.text) {\n      dataSave = dataPlaylists.filter((playlist) =>\n        playlist.name.toLowerCase().includes(filterValues.text.toLowerCase())\n      );\n    } \n    \n    setPlaylists(dataSave);\n  }\n\n  const filterPlayList = async () => {\n    if (filterValues.hasFilter) {\n      setLoading(true);\n\n      const dataPlaylists = await getPlaylists(filterValues.advancedFilter);\n\n      if (!dataPlaylists) {\n        setError(true);\n      } else {\n        setOriginalPlaylists(dataPlaylists);\n        setPlaylists(dataPlaylists);\n      }\n\n      const filter = {\n        text: filterValues.text,\n        advancedFilter: filterValues.advancedFilter,\n        hasFilter: false\n      }\n\n      dispatch(changeFilter(filter));\n      setLoading(false);\n    }\n  }\n\n  return (\n    <>\n      {loading ?\n          <S.ProgressCustom />\n        :\n        error ?\n          <Alert severity=\"error\">Não foi possível retornar as playlists!</Alert>\n        : \n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          > \n            {playlists.length > 0 ?\n              playlists.map((playlist) => {\n                return (\n                  <Grid key={playlist.name}>\n                    <CardPlay \n                      name={playlist.name}\n                      link={playlist.external_urls.spotify}\n                      image={playlist.images[0].url}\n                    />\n                  </Grid>\n                )\n              })\n              :\n              <Typography component=\"p\">\n                Nenhum resultado encontrado!\n              </Typography>\n            }\n          </Grid>\n      }\n    </>\n  );\n}\n\nexport default Playlist;\n","import styled, { css, createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n${({ theme }) =>\n    css`\n    body {\n      padding: 0;\n      margin: 0;\n      background: ${theme.colors.background};\n      font-family: Open-Sans, Helvetica, Sans-Serif;\n    }\n  `};\n`;\n\nexport const Main = styled.main`\n ${({ theme }) =>\n    css`\n      background: ${theme.colors.background};\n      color: ${theme.colors.text};\n      padding: 20px;\n      text-align: center;\n    `};\n`;\n","import Container from '@material-ui/core/Container';\nimport { useSelector } from 'react-redux';\n\nimport { Light, ThemeProvider } from '../../../themes';\nimport { Header } from '../../organisms';\n\nimport * as S from './styles';\n\nconst Layout = ({ children }) => {\n  const theme = useSelector((state) => state.themes.data);\n\n  return (\n    <ThemeProvider theme={theme || Light}>\n      <S.GlobalStyle />\n      <Header />\n      <S.Main>\n        <Container maxWidth=\"md\">\n          {children}\n        </Container>\n      </S.Main>\n    </ThemeProvider>\n  );\n};\n\nexport default Layout;\n","import { Filters, Playlist } from '../../../components/organisms';\nimport { Layout } from '../../templates';\n\nconst Home = () => {\n  return (\n    <Layout>\n      <Filters />\n      <Playlist />\n    </Layout>\n  );\n}\n\nexport default Home;\n","import styled, { css } from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport const ButtonCustom = styled(Button)`\n ${({ theme }) =>\n    css` && {\n      background: ${theme.colors.brandSecondary};\n      border-color: ${theme.colors.brandSecondary};\n      color: ${theme.colors.text};\n      margin-top: 50px;\n    }`};\n`;\n\nexport const ProgressCustom = styled(CircularProgress)`\n ${({ theme }) =>\n    css` && {\n      color: ${theme.colors.text};\n      margin-top: 50px;\n    }`};\n`;\n\n","import { useState, useEffect } from \"react\";\nimport ExitToAppTwoToneIcon from '@material-ui/icons/ExitToAppTwoTone';\nimport Alert from '@material-ui/lab/Alert';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport { Layout } from '../../templates';\nimport { saveAuth } from '../../../store/actions/auth';\nimport { Helpers, HasLogged } from '../../../utils';\nimport SpotiFy from '../../../services/spotify';\n\nimport * as S from './styles';\n\nconst env = process.env;\n\nconst Login = () => {\n  const [errorLogin, setErrorLogin] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleLogin = () => {\n    setLoading(true);\n\n    const urlApi = `${env.REACT_APP_SP_API_AUTH}/authorize?client_id=${env.REACT_APP_SP_API_CLIENT_ID}&redirect_uri=${env.REACT_APP_SP_API_REDIRECT_URI}&scope=user-read-private%20user-read-email&response_type=token`;\n    window.open(urlApi, '_self');\n  }\n\n  useEffect( async () => {\n    const query = Helpers.getQueryStringParams();\n\n    if (query.token_type && query.access_token) {\n      setLoading(true);\n\n      const getProfile = await SpotiFy.getProfile(query.token_type, query.access_token);\n\n      setLoading(false);\n\n      if (getProfile.status === 200) {\n        const dataAuth = {\n          token: query.access_token,\n          tokenType: query.token_type,\n          ...getProfile.data\n        }\n\n        dispatch(saveAuth(dataAuth));\n        history.push('/home');\n      } else {\n        setErrorLogin(true);\n      }\n    }\n  }, []);\n\n  if (HasLogged()) {\n    return (<Layout><Alert severity=\"warning\">Você já está logado!</Alert></Layout>);\n  }\n\n  return (\n    <Layout>\n      {errorLogin && <Alert severity=\"error\">Não foi possível realizar o login!</Alert>}\n\n      {!loading ? (\n        <S.ButtonCustom\n          size=\"large\"\n          startIcon={<ExitToAppTwoToneIcon />}\n          onClick={_ => handleLogin()}\n        >\n          Login com SpotiFy\n        </S.ButtonCustom>\n      ) : <S.ProgressCustom />}\n    </Layout>\n  );\n}\n\nexport default Login;\n","import { Redirect, withRouter } from 'react-router-dom';\n\nimport { HasLogged } from '.';\n\nconst LoggedWrapper = ({ children }) => {\n  if (!HasLogged()) {\n    return <Redirect to=\"/login\" />;\n  } \n\n  return children;\n}\n\nexport default withRouter(LoggedWrapper);\n","import { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport { Home, Login } from './components/pages';\nimport LoggedWrapper from './utils/LoggedWrapper';\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route component={Login} path=\"/\" exact/>\n      <Route component={Login} path=\"/login\" exact/>\n      <LoggedWrapper>\n        <Route component={Home} path=\"/home\" exact/>\n      </LoggedWrapper>\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","const INITIAL_STATE = {\n  data: null,\n};\n\nconst Themes = (state = INITIAL_STATE, action) => {\n  const reducers = {\n    CHANGE_THEME: {\n      ...state,\n      data: action.theme,\n    },\n    default: state,\n  };\n\n  return reducers[action.type] || reducers.default;\n};\n\nexport default Themes;\n","const INITIAL_STATE = {\n  name: null,\n  images: null,\n  token: null,\n  tokenType: null,\n  logged: false\n};\n\nconst Auth = (state = INITIAL_STATE, action) => {\n  const reducers = {\n    SAVE_AUTH: {\n      ...state,\n      name: action.auth?.display_name,\n      images: action.auth?.images,\n      token: action.auth?.token,\n      tokenType: action.auth?.tokenType,\n      logged: true,\n    },\n    PURGE_AUTH: {\n      ...state,\n      name: null,\n      images: null,\n      token: null,\n      tokenType: null,\n      logged: false,\n    },\n    default: state,\n  };\n\n  return reducers[action.type] || reducers.default;\n};\n\nexport default Auth;\n","const INITIAL_STATE = {\n  text: null,\n  advancedFilter: {},\n  hasFilter: false,\n};\n\nconst Filter = (state = INITIAL_STATE, action) => {\n  const reducers = {\n    CHANGE_FILTER: {\n      ...state,\n      text: action?.filter?.text,\n      advancedFilter: action?.filter?.advancedFilter,\n      hasFilter: action?.filter?.hasFilter\n    },\n    default: state,\n  };\n\n  return reducers[action.type] || reducers.default;\n};\n\nexport default Filter;","import { createStore, combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { Themes, Auth, Filter } from './reducers';\n\nconst persistTheme = {\n  key: '@SFR:theme',\n  storage,\n};\n\nconst persistAuth = {\n  key: '@SFR:Auth',\n  storage,\n};\n\nconst persistFilter = {\n  key: '@SFR:Filter',\n  storage,\n};\n\n\nconst persistedReducer = combineReducers({\n  themes: persistReducer(persistTheme, Themes),\n  Auth: persistReducer(persistAuth, Auth),\n  Filter: persistReducer(persistFilter, Filter),\n});\n\nconst store = createStore(persistedReducer);\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport Routes from './routes';\nimport { store, persistor } from './store';\n\nconst App = () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Routes />\n    </PersistGate>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}